#!/bin/bash
# +--------------------------------------------------------------------+
# EFA update script
# Version 20150426
# +--------------------------------------------------------------------+
# Copyright (C) 2012~2015 http://www.efa-project.org
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# +--------------------------------------------------------------------+

#----------------------------------------------------------------#
# Variables
#----------------------------------------------------------------#
VERSION="3.0.0.8"
logdir="/var/log/EFA"
yumexclude="kernel* mysql* postfix* mailscanner* clamav* clamd*"
ADMINEMAIL="`cat /etc/EFA-Config | grep ADMINEMAIL | sed 's/.*://'`"
MAILFROM="$ADMINEMAIL"
MAILTO="$ADMINEMAIL"
MAILSUBJECT="EFA Update Complete For: `hostname`"
SENDMAIL="/usr/lib/sendmail"
TMPMAIL="/tmp/tempmail"
STAGING="/tmp/EFA-Staging"
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# List of current version numbers in this E.F.A. Version.
#----------------------------------------------------------------#
MAILWATCHVERSION="7f6858df83"
IMAGECEBERUSVERSION="1.1"
SPAMASSASSINVERSION="3.4.0a"
PYZORVERSION="0.7.0"
VMTOOLSVERSION="9.4.0-1280544"
WEBMINVERSION="1.690-1"
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Function where we do all our magic
#----------------------------------------------------------------#
function run_update() {
  echo "Starting update to E.F.A. 3.0.0.8"

  # To package for this update:
  # /EFA-Version-Upgrade                              <- This file in the root, renamed!
  # /Files/										                        <- Directory (containing binary files)
  # /Files/geoip-5fc9611.tar.gz                       <- GeoIP update files
  # /Files/Spamassassin-3.4.0a-EFA-Upgrade.tar.gz     <- Spamassassin update files
  # /Scripts/									                        <- Directory (containing update scripts (previous git scripts))
  # /Scripts/lib-EFA-Configure                        <- Complete EFA-Configure dir with all files
  # /Scripts/EFA-Configure                            <- EFA-Configure script

  ##### Backup Phase #####
  /usr/local/sbin/EFA-Backup -backup

  ##### Commit Phase #####

  # Issue #171 Update clamav -- fix any clamav discrepancies
  # Enabling EPEL Repo...
  # Do this early in case it fails...
  rpm --import https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6
  [[ $? -ne 0 ]] && abort
  yum install epel-release -y 
  [[ $? -ne 0 ]] && abort
  
  # Issue #150 URIBL_BLOCKED using dnsmasq
  # disable dnsmasq but leave running
  # do this early in case it fails...
  yum -y install unbound
  [[ $? -ne 0 ]] && abort
  chkconfig dnsmasq off
  # disable ipv6 support in unbound
  sed -i "/^\t# do-ip6: yes/ c\\\tdo-ip6: no" /etc/unbound/unbound.conf
  # copy dnsmasq resolvers to unbound
  resolvips=$(cat /etc/resolv.dnsmasq | awk '{print $2}')
  IFS1=$IFS
  IFS="\n"
  echo "forawrd-zone:" > /etc/unbound/conf.d/forwarders.conf
  echo '  name: "."' >> /etc/unbound/conf.d/forwarders.conf
  for i in $resolvips; do
    echo "  forward-addr: $i" >> /etc/unbound/conf.d/forwarders.conf
  done
  IFS=$IFS1
  # shut down dnsmasq
  service dnsmasq stop
  # start unbound
  service unbound start
  chkconfig unbound on
  
  # grab latest version of EFA-Configure with libraries
  rm -f /usr/local/sbin/EFA-Configure
  rm -f /var/EFA/lib/EFA-Configure/*
  mv $STAGING/Scripts/EFA-Configure /usr/local/sbin/EFA-Configure
  mkdir -p /var/EFA/lib/EFA-Configure
  mv $STAGING/Scripts/lib-EFA-Configure/* /var/EFA/lib/EFA-Configure/
  chmod 700 /usr/local/sbin/EFA-Configure
  chmod 600 /var/EFA/lib/EFA-Configure/*

  # Issue #132 Increase sa-learn and spamassassin message size limits
  # Do not alter if not at default level
  TEST=$(grep '^Max Spam Check Size = 200k' /etc/MailScanner/MailScanner.conf)
  if [[ -n $TEST ]]; then
    sed -i "/^Max Spam Check Size =/ c\Max Spam Check Size = 2048k" /etc/MailScanner/MailScanner.conf
  fi

  # Issue #157 Razor failing after registration of service
  # Reapply perms for new builds
  # Setgid
  chown -R postfix:apache /var/spool/postfix/.razor
  chmod g+s /var/spool/postfix/.razor
  chmod ug+rwx /var/spool/postfix/.razor
  chmod ug+rw /var/spool/postfix/.razor

  # Issue #156 -- GeoIP Bug
  mv $STAGING/Files/geoip-5fc9611.tar.gz /usr/src/EFA
  tar xzvf /usr/src/EFA/geoip-5fc9611.tar.gz
  cd /usr/src/EFA/geoip-api-perl
  perl Makefile.PL
  make
  make install
  cd ~
  rm -rf /usr/src/EFA/geoip*

  # Issue #166 MailWatch cron job not executing contents
  sed -i "/^#!/bin/sh$/ c\#!/bin/bash" /etc/cron.daily/mailwatch

  # Issue #45 Add ScamNailer Ruleset
  # todo:  Host this on dl.efa-project.org
  echo -e "#EFA: ScamNailer ClamAV Ruleset\nDatabaseCustomURL http://www.mailscanner.eu/scamnailer.ndb" >> /etc/freshclam.conf

  # Issue #169 Clean up clamav-unoffical-sigs script
  sed -i '/^mbl_dbs="/ c\#mbl_dbs="' /usr/local/etc/clamav-unofficial-sigs.conf
  sed -i '/^#mbl_dbs="/ {n; s/.*/#  mbl.ndb/}' /usr/local/etc/clamav-unofficial-sigs.conf
  sed -i '/^#mbl_dbs="/ {n;n; s/.*/#"/}' /usr/local/etc/clamav-unofficial-sigs.conf

  # Update spamassassin
  update-spamassassin
 
  echo "$VERSION update is complete"
  echo ""
  echo "" >> $TMPMAIL
  echo "Update to $VERSION complete." >> $TMPMAIL
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Update ClamAV function
#----------------------------------------------------------------#
function update-clamav(){
  yum -y update clam*
  [[ $? -ne 0 ]] && abort
  
  # Reverse changes from EPEL version of clamd
  sed -i "/^DatabaseDirectory \/var\/lib\/clamav/ c\DatabaseDirectory /var/clamav" /etc/clamd.conf
  sed -i "/^User clam/ c\User clamav" /etc/clamd.conf
  rm -rf /var/lib/clamav
  userdel clam
  chown clamav:clamav /var/run/clamav
  service clamd start
  
  # remove freshclam from /etc/cron.daily (redundant to /etc/cron.hourly/update_virus_scanners)
  rm -f /etc/cron.daily/freshclam
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Update SpamAssassin function
#----------------------------------------------------------------#
function update-spamassassin(){
  if [[ $SPAMASSASSINVERSION != "`grep SPAMASSASSINVERSION /etc/EFA-Config | sed 's/^.*://'`" ]]; then
    # Add a spamassassin version to EFA-Config if needed
    if [[ -z "`grep SPAMASSASSINVERSION /etc/EFA-Config`" ]]; then
      echo "SPAMASSASSINVERSION:" >> /etc/EFA-Config
    fi

    #### Backup Phase #####
    BACKUPDIR="/var/EFA/backup/$VERSION"

    # Back up old SA (excludes man pages)
    mkdir -p $BACKUPDIR/spamassassin-etc
    cp -r /etc/mail/spamassassin $BACKUPDIR/spamassassin-etc
    mkdir -p $BACKUPDIR/spamassassin-var
    cp -r /var/lib/spamassassin $BACKUPDIR/spamassassin-var
    mkdir -p $BACKUPDIR/spamassassin-usr
    cp -r /usr/local/share/perl5/Mail/SpamAssassin $BACKUPDIR/spamassassin-usr
    cp /usr/local/share/perl5/spamassassin-run.pod $BACKUPDIR/spamassassin-usr
    mkdir -p $BACKUPDIR/spamassassin-bin
    cp /usr/local/bin/sa-awl $BACKUPDIR/spamassassin-bin
    cp /usr/local/bin/spamassassin $BACKUPDIR/spamassassin-bin
    cp /usr/local/bin/sa-compile $BACKUPDIR/spamassassin-bin
    cp /usr/local/bin/spamc $BACKUPDIR/spamassassin-bin
    cp /usr/local/bin/spamd $BACKUPDIR/spamassassin-bin
    cp /usr/local/bin/sa-update $BACKUPDIR/spamassassin-bin
    cp /usr/local/bin/sa-check_spamd $BACKUPDIR/spamassassin-bin
    cp /usr/local/bin/sa-learn $BACKUPDIR/spamassassin-bin

    #### Commit Phase #####
    service MailScanner stop

    # Remove old Spamassassin definitions
    rm -rf /var/lib/spamassassin

    # Bypass noexec on /tmp...compile in /usr/src instead
    mv $STAGING/Files/Spamassassin-$SPAMASSASSINVERSION-EFA-Upgrade.tar.gz /usr/src/EFA
    cd /usr/src/EFA
    tar xzvf Spamassassin-$SPAMASSASSINVERSION-EFA-Upgrade.tar.gz
    cd Spamassassin-$SPAMASSASSINVERSION-EFA-Upgrade
    # Installation meta-script...add a little modularity to future spamassassin upgrades
    chmod 755 install.sh
	  # Run install without testing each module during compile
	  # Some tests would fail in remote environments due to external factors
    ./install.sh --skiptests
    if [[ $? -ne 0 ]]; then
      cd /usr/src/EFA
      rm -rf /usr/src/EFA/Spamassassin*
      abort
    fi

    # Symlink for Geo::IP
    mkdir -p /usr/local/share/GeoIP
    ln -s /var/www/html/mailscanner/temp/GeoIP.dat /usr/local/share/GeoIP/GeoIP.dat

    # Issue #82 re2c spamassassin rule compilation
    yum -y install re2c
    sed -i "/^# loadplugin Mail::SpamAssassin::Plugin::Rule2XSBody/ c\loadplugin Mail::SpamAssassin::Plugin::Rule2XSBody" /etc/mail/spamassassin/v320.pre

    # Grab new definitions
    /usr/local/bin/sa-update --gpgkey 6C6191E3 --channel sought.rules.yerp.org --channel updates.spamassassin.org
    /usr/local/bin/sa-compile

    # Restart mailscanner
    service MailScanner start

    # Cleanup
    rm -rf /usr/src/EFA/Spamassassin*

    # Update the version of spamassassin in EFA-Config
    sed -i "/SPAMASSASSINVERSION:/ c\SPAMASSASSINVERSION:$SPAMASSASSINVERSION" /etc/EFA-Config
  fi
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Function to update system with yum
#----------------------------------------------------------------#
function yum_update() {
  yum -y --exclude="$yumexclude" update
  # Todo, write some logic that checks any of the yumexclude packages and updates them after testing...
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Finalize
#----------------------------------------------------------------#
function finalize() {
  # Write the latest version number
  echo "EFA-$VERSION" > /etc/EFA-Version
  sed -i "/--- Welcome to EFA-/ c\--- Welcome to EFA-$VERSION ---" /etc/issue

  # Finalize the mail
  echo "" >> $TMPMAIL
  echo "Please visit http://www.efa-project.org for more information." >> $TMPMAIL
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Where to start
#----------------------------------------------------------------#
initialize
run_update
finalize
