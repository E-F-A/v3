#!/bin/bash
# +--------------------------------------------------------------------+
# EFA update script
# Version 20170415
# +--------------------------------------------------------------------+
# Copyright (C) 2012~2017 https://efa-project.org
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# +--------------------------------------------------------------------+

#----------------------------------------------------------------#
# Variables
#----------------------------------------------------------------#
VERSION="3.0.2.2"
logdir="/var/log/EFA"
ADMINEMAIL="`cat /etc/EFA-Config | grep ADMINEMAIL | sed 's/.*://'`"
MAILFROM="$ADMINEMAIL"
MAILTO="$ADMINEMAIL"
MAILSUBJECT="EFA Update Complete For: `hostname`"
SENDMAIL="/usr/lib/sendmail"
TMPMAIL="/tmp/tempmail"
STAGING="/tmp/EFA-Staging"
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# List of current version numbers in this E.F.A. Version.
#----------------------------------------------------------------#
MAILWATCHVERSION="34ccbcc"
MAILWATCHRELEASE="1.2.3-dev"
MAILWATCHBRANCH="develop"
IMAGECEBERUSVERSION="1.1"
PYZORVERSION="0.7.0"
WEBMINVERSION="1.770-1"
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Function where we do all our magic
#----------------------------------------------------------------#
function run_update() {
  echo "Starting update to E.F.A. $VERSION"

  # To package for this update:
  # /EFA-Version-Upgrade                              <- This file in the root, renamed!
  # /Files/                                           <- Directory (containing binary files)
  # /Scripts/                                         <- Directory (containing update scripts (previous git scripts))
  # /Scripts/lib-EFA-Configure                        <- Complete EFA-Configure dir with all files
  # /Scripts/EFA-Configure                            <- EFA-Configure script

  ##### Backup Phase #####
  /usr/local/sbin/EFA-Backup -backup
  [[ $? -ne 0 ]] && abort

  ##### Commit Phase #####

  # Enter Maintenance Mode
  mv -f /etc/cron.d/EFA-Monitor.cron /var/EFA > /dev/null 2>&1

  yum clean all
  yum_update

  YUM_EXCLUDES=$(grep "^exclude=" /etc/yum.conf | awk -F'=' '{print $2}')
  sed -i "/^exclude=/ c\exclude=" /etc/yum.conf

  # Update MailWatch
  update-mailwatch

  # More Mod Security Exceptions
  RULE1PRESENT=$(grep "SecRuleRemoveById 950005" /etc/httpd/conf.d/mod_security.conf)
  if [[ -z $RULE1PRESENT ]]; then
    sed -i '/<\/IfModule>/{N;/\n# END eFa exceptions block/{s/^/    # Remote file access attempt false positive\n    SecRuleRemoveById 950005\n/;};}' /etc/httpd/conf.d/mod_security.conf
  fi

  # restart httpd after the changes
  /etc/init.d/httpd restart

  # Exit Maintenance Mode
  mv -f /var/EFA/EFA-Monitor.cron /etc/cron.d/ > /dev/null 2>&1
  sed -i "/^exclude=/ c\exclude=$YUM_EXCLUDES" /etc/yum.conf

  echo "$VERSION update is complete"
  echo ""
  echo "" >> $TMPMAIL
  echo "Update to $VERSION complete." >> $TMPMAIL
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Update mailwatch function
#----------------------------------------------------------------#
function update-mailwatch() {
  # Update mailwatch if we have a new version available
  if [[ $MAILWATCHVERSION != "`grep MAILWATCHVERSION /etc/EFA-Config | sed 's/^.*://'`" ]]
    then

      #### Backup Phase #####
      echo -e "Starting installation of new mailwatch version"
      service httpd stop
      service MailScanner stop

      mkdir -p /var/EFA/backup/$VERSION/ > /dev/null 2>&1
      mv /var/www/html/mailscanner /var/EFA/backup/$VERSION/ > /dev/null 2>&1
      mv /usr/share/MailScanner/perl/custom/MailWatch.pm /var/EFA/backup/$VERSION > /dev/null 2>&1
      mv /usr/share/MailScanner/perl/custom/SQLBlackWhiteList.pm /var/EFA/backup/$VERSION/ > /dev/null 2>&1
      mv /usr/share/MailScanner/perl/custom/SQLSpamSettings.pm /var/EFA/backup/$VERSION/ > /dev/null 2>&1
      mv /usr/local/bin/mailwatch/tools /var/EFA/backup/$VERSION/ > /dev/null 2>&1
      mv /etc/cron.hourly/mailwatch_relay.sh /var/EFA/backup/$VERSION > /dev/null 2>&1
      mv /etc/cron.daily/mailwatch /var/EFA/backup/$VERSION > /dev/null 2>&1

      #### Commit Phase #####
      rm -rf usr/src/EFA/MailWatch-develop
      rm -rf usr/src/EFA/MailWatch-master
      unzip -d /usr/src/EFA $STAGING/Files/MailWatch-$MAILWATCHBRANCH-GIT-$MAILWATCHVERSION.zip
      cd /usr/src/EFA/MailWatch-$MAILWATCHBRANCH/MailScanner_perl_scripts

      # Issue #66  Grab Passwords from /etc/EFA-Config
      sed -i "/^my (\$db_user) =/ c\my (\$db_user) = 'mailwatch';" MailWatchConf.pm
      sed -i "/^my (\$db_pass) =/ c\my (\$fh);\nmy (\$pw_config) = '/etc/EFA-Config';\nopen(\$fh, \"<\", \$pw_config);\nif(\!\$fh) {\n  MailScanner::Log::WarnLog(\"Unable to open %s to retrieve password\", \$pw_config);\n  return;\n}\nmy (\$db_pass) = grep(/^MAILWATCHSQLPWD/,<\$fh>);\n\$db_pass =~ s/MAILWATCHSQLPWD://;\n\$db_pass =~ s/\\\n//;\nclose(\$fh);" MailWatchConf.pm
      mv -f MailWatchConf.pm /usr/share/MailScanner/perl/custom/
      mv -f MailWatch.pm /usr/share/MailScanner/perl/custom/
      mv -f SQLBlackWhiteList.pm /usr/share/MailScanner/perl/custom
      mv -f SQLSpamSettings.pm /usr/share/MailScanner/perl/custom/

      # Update cron jobs to new filenames
      cat > /etc/cron.hourly/mailwatch_relay.sh << 'EOF'
#!/bin/bash

/usr/bin/php /usr/local/bin/mailwatch/tools/Postfix_relay/mailwatch_postfix_relay.php --refresh >>/dev/null 2>&1
/usr/bin/php /usr/local/bin/mailwatch/tools/Postfix_relay/mailwatch_mailscanner_relay.php --refresh >>/dev/null 2>&1
EOF
      cat > /etc/cron.daily/mailwatch << 'EOF'
#!/bin/bash
/usr/local/bin/mailwatch/tools/Cron_jobs/mailwatch_db_clean.php >> /dev/null 2>&1
/usr/local/bin/mailwatch/tools/Cron_jobs/mailwatch_quarantine_maint.php --clean >> /dev/null 2>&1
/usr/local/bin/mailwatch/tools/Cron_jobs/mailwatch_quarantine_report.php >> /dev/null 2>&1      
EOF
      chmod +x /etc/cron.daily/mailwatch
      chmod +x /etc/cron.hourly/mailwatch_relay.sh
      touch /var/www/html/index.html
      echo "<!DOCTYPE html>" > /var/www/html/index.html
      echo "<html>" >> /var/www/html/index.html
      echo " <head>" >> /var/www/html/index.html
      echo "  <title>MailWatch</title>" >> /var/www/html/index.html
      echo "  <meta http-equiv=\"refresh\" content=\"0; url=/mailscanner/\" />" >> /var/www/html/index.html
      echo " </head>" >> /var/www/html/index.html
      echo " <body>" >> /var/www/html/index.html
      echo " </body>" >> /var/www/html/index.html
      echo "</html>" >> /var/www/html/index.html

      cd /usr/src/EFA/MailWatch-$MAILWATCHBRANCH
      mv tools /usr/local/bin/mailwatch
      rm -f /usr/local/bin/mailwatch/tools/Cron_jobs/INSTALL
      chmod +x /usr/local/bin/mailwatch/tools/Cron_jobs/*
      mv mailscanner /var/www/html
      cd /var/www/html/mailscanner
      chown root:apache images
      chmod ug+rwx images
      chown root:apache images/cache
      chmod ug+rwx images/cache
      chown root:apache temp
      chmod ug+rwx temp
      rm -rf docs

      # Merge conf.php and conf.php.example changes
      cp /var/EFA/backup/$VERSION/mailscanner/conf.php /var/www/html/mailscanner/conf.php

      LDAPSSLPRESENT=`grep define\(\'LDAP_SSL\' /var/www/html/mailscanner/conf.php`
      if [[ -z $LDAPSSLPRESENT ]]; then
        sed -i "/^define('USE_LDAP'/ a\define('LDAP_SSL', false); // Set to true if using LDAP with SSL encryption." /var/www/html/mailscanner/conf.php
      fi

      LDAPFILTERPRESENT=`grep define\(\'LDAP_FILTER\' /var/www/html/mailscanner/conf.php`
      if [[ -z $LDAPFILTERPRESENT ]]; then
         sed -i "/^define('LDAP_SITE'/ a\define('LDAP_FILTER', 'mail=%s'); //%s will be replaced by username eg. 'mail=%', 'mail=SMTP:%s', 'sAMAccountName=%s'" /var/www/html/mailscanner/conf.php
      fi

      LDAPUSERNAMEFIELDPRESENT=`grep define\(\'LDAP_BIND_PREFIX\' /var/www/html/mailscanner/conf.php`
      if [[ -z $LDAPUSERNAMEFIELDPRESENT ]]; then
         sed -i "/^define('LDAP_EMAIL_FIELD'/ a\\\n// The value of the LDAP_USERNAME_FIELD will be extended by LDAP_BIND_PREFIX and LDAP_BIND_SUFFIX to created the binding username.\ndefine('LDAP_USERNAME_FIELD', 'cn');\n// define('LDAP_BIND_PREFIX', 'cn=');\n// define('LDAP_BIND_SUFFIX', ',' . LDAP_DN);\n" /var/www/html/mailscanner/conf.php
      fi

      # Update definition names that have changed
      sed -i "s/^define('QUARANTINE_MAIL_HOST'/define('MAILWATCH_MAIL_HOST'/" /var/www/html/mailscanner/conf.php
      sed -i "s/^define('QUARANTINE_MAIL_PORT'/define('MAILWATCH_MAIL_PORT'/" /var/www/html/mailscanner/conf.php
      sed -i "s/^define('QUARANTINE_FROM_ADDR'/define('MAILWATCH_FROM_ADDR'/" /var/www/html/mailscanner/conf.php
      sed -i "/^define('QUARANTINE_REPORT_HOSTURL'/ c\define('MAILWATCH_HOSTURL', 'http://' . rtrim(gethostname()) . '/mailscanner');" /var/www/html/mailscanner/conf.php

      # Dump MS_LOGO no longer used
      sed -i "/^define('MS_LOGO'/d" /var/www/html/mailscanner/conf.php

      QUARANTINEFILTERSCOMBINEDPRESENT=`grep define\(\'QUARANTINE_FILTERS_COMBINED\' /var/www/html/mailscanner/conf.php`
      if [[ -z $QUARANTINEFILTERSCOMBINEDPRESENT ]]; then
        sed -i "/^define('QUARANTINE_DAYS_TO_KEEP'/ a\//Set QUARANTINE_FILTERS_COMBINED to true to combine quarantine report into a single report when user filters are present\ndefine('QUARANTINE_FILTERS_COMBINED', false);" /var/www/html/mailscanner/conf.php
      fi

      DISPLAYVIRUSREPORT=`grep define\(\'DISPLAY_VIRUS_REPORT\' /var/www/html/mailscanner/conf.php`
      if [[ -z $DISPLAYVIRUSREPORT ]]; then
        sed -i "/^define('VIRUS_INFO'/ a\\\n// Display Virus on message listing\ndefine('DISPLAY_VIRUS_REPORT', true);" /var/www/html/mailscanner/conf.php
      fi

      VIRUSREGEXPRESENT=`grep define\(\'VIRUS_REGEX\' /var/www/html/mailscanner/conf.php`
      if [[ -z $VIRUSREGEXPRESENT ]]; then
        sed -i "/^define('DISPLAY_VIRUS_REPORT'/ a\\\n// Override VIRUS_REGEX??// define('VIRUS_REGEX', '/(\S+) was infected by (\S+)/'); // SophosSAVI" /var/www/html/mailscanner/conf.php
      fi

      NONSPAMPRESENT=`grep define\(\'HIDE_NON_SPAM\' /var/www/html/mailscanner/conf.php`
      if [[ -z $NONSPAMPRESENT ]]; then
        sed -i "/^define('HIDE_HIGH_SPAM'/ a\\\n// Hide Non Spam from quarantine reports\ndefine('HIDE_NON_SPAM', false);" /var/www/html/mailscanner/conf.php
      fi

      ADCOMPATPRESENT=`grep define\(\'LDAP_MS_AD_COMPATIBILITY\' /var/www/html/mailscanner/conf.php`
      if [[ -z $ADCOMPATPRESENT ]]; then
        sed -i "/^define('HIDE_NON_SPAM'/ a\\\n//Active Directory Compatibility Mode\ndefine('LDAP_MS_AD_COMPATIBILITY', true);" /var/www/html/mailscanner/conf.php
      fi

      # Issue #262 MS_LOGO and MW_LOGO Definitions Needed
      MW_LOGO_PRESENT=$(grep "^define('MW_LOGO'" /var/www/html/mailscanner/conf.php)
      if [[ -z $MW_LOGO_PRESENT ]]; then
        echo "" >> /var/www/html/mailscanner/conf.php
        echo "// Define MailWatch logo name" >> /var/www/html/mailscanner/conf.php
        echo "define('MW_LOGO', 'mailwatch-logo.png');" >> /var/www/html/mailscanner/conf.php
      fi

      # Issue #291 HIDE_UNKNOWN option for MailWatch
      HIDEUNKNOWN_PRESENT=`grep define\(\'HIDE_UNKNOWN\' /var/www/html/mailscanner/conf.php`
      if [[ -z $HIDEUNKNOWN_PRESENT ]]; then
        sed -i "/^define('HIDE_NON_SPAM'/ a\\\n////Hide Unknown Mail from quarantine reports\ndefine('HIDE_UNKNOWN', true);" /var/www/html/mailscanner/conf.php
      fi

      # Add new LANG option for MailWatch
      LANG_PRESENT=`grep define\(\'LANG\' /var/www/html/mailscanner/conf.php`
      if [[ -z $LANG_PRESENT ]]; then
        echo "" >> /var/www/html/mailscanner/conf.php
        echo "// Define language (de, en, fr, it, nl, pt_br);" >> /var/www/html/mailscanner/conf.php
        echo "// See http://www.lingoes.net/en/translator/langcode.htm" >> /var/www/html/mailscanner/conf.php
        echo "define('LANG', 'en');" >> /var/www/html/mailscanner/conf.php
      fi

      # Add session handling option
      SESSIONNAME_PRESENT=`grep define\(\'SESSION_NAME\' /var/www/html/mailscanner/conf.php`
      if [[ -z $SESSIONNAME_PRESENT ]]; then
          sed -i "/^define('LANG'/ a\\\n// Session Handling - conflicts can exist when the your environment makes use of multiple php sessions on the same server\n// to resolve this, uncomment the following option.  See https://github.com/mailwatch/MailWatch/issues/730 for more info\n// define('SESSION_NAME', 'MailWatch');" /var/www/html/mailscanner/conf.php
      fi

      # Add favicons back
      /bin/cp -f /var/EFA/backup/$VERSION/mailscanner/favicon.ico /var/www/html/mailscanner/
      /bin/cp -f /var/EFA/backup/$VERSION/mailscanner/favicon.ico /var/www/html/mailscanner/images
      /bin/cp -f /var/EFA/backup/$VERSION/mailscanner/favicon.ico /var/www/html/mailscanner/images/favicon.png

      # Add back EFA Branding
      cd /var/www/html/mailscanner/images
      cp /var/EFA/backup/$VERSION/mailscanner/images/EFAlogo-79px.png .
      mv mailwatch-logo.png mailwatch-logo.png.orig
      
      # Issue #107 MailWatch login page shows Mailwatch logo and theme after update testing
      sed -i 's/#f7ce4a/#719b94/g' /var/www/html/mailscanner/style.css

      ln -s EFAlogo-79px.png mailwatch-logo.png

      # Issue #289 MailWatch logo on release link broken
      ln -s EFAlogo-79px.png mailwatch-logo.gif

      # Alter color scheme
      sed -i 's/#F7CE4A/#719b94/g' /var/www/html/mailscanner/style.css

      # Add back Mailgraph link
      cd /var/www/html/mailscanner
      cp other.php other.php.orig
      sed -i "/^    echo '<li><a href=\"geoip_update.php\">/a\    /*Begin EFA*/\n    echo '<li><a href=\"mailgraph.php\">View Mailgraph Statistics</a>';\n    /*End EFA*/" other.php
      cp /var/EFA/backup/$VERSION/mailscanner/mailgraph.php .

      # Reconfigure Greylisting as previously configured
      cp /var/EFA/backup/$VERSION/mailscanner/grey.php .

      # Add greylist to mailwatch menu
      # hide from non-admins
      sed -i "/^        \$nav\['docs.php'\] =/{N;s/$/\n        \/\/Begin EFA\n        if \(\$_SESSION\['user_type'\] == 'A' \&\& SHOW_GREYLIST == true\) \{\n            \$nav\['grey.php'\] = \"greylist\";\n        \}\n        \/\/End EFA/}" /var/www/html/mailscanner/functions.php

      # add SHOW_GREYLIST to conf.php
      # Issue #275 duplicate SHOW_GREYLIST options
      SHOW_GREYLIST_PRESENT=$(grep "^define('SHOW_GREYLIST'" /var/www/html/mailscanner/conf.php)
      if [[ -z $SHOW_GREYLIST_PRESENT ]]; then
        echo "" >> /var/www/html/mailscanner/conf.php
        echo "// Greylisting menu item" >> /var/www/html/mailscanner/conf.php
        echo "define('SHOW_GREYLIST', false);" >> /var/www/html/mailscanner/conf.php
      fi

      HIDE_UNKNOWN_PRESENT=`grep define\(\'HIDE_UNKNOWN\' /var/www/html/mailscanner/conf.php`
      if [[ -z $HIDE_UNKNOWN_PRESENT ]]; then
        sed -i "/^define('SHOW_GREYLIST'/ a\\\n// Hide Unknown Mail from quarantine reports\ndefine('HIDE_UNKNOWN', false);" /var/www/html/mailscanner/conf.php
      fi

      AUTO_RELEASE_PRESENT=`grep define\(\'AUTO_RELEASE\' /var/www/html/mailscanner/conf.php`
      if [[ -z $AUTO_RELEASE_PRESENT ]]; then
        sed -i "/^define('HIDE_UNKNOWN'/ a\\\n//Quarantine Auto Release\n//Set true to allow auto release of quarantined items from quarantine report\ndefine('AUTO_RELEASE', false);" /var/www/html/mailscanner/conf.php
      fi

      DANGEROUS_CONTENT_PRESENT=`grep define\(\'DOMAINADMIN_CAN_RELEASE_DANGEROUS_CONTENTS\' /var/www/html/mailscanner/conf.php`
      if [[ -z $DANGEROUS_CONTENT_PRESENT ]]; then
        echo "" >> /var/www/html/mailscanner/conf.php
        echo "//Give Domain Admins ability to release dangerous content, like viruses" >> /var/www/html/mailscanner/conf.php
        echo "define('DOMAINADMIN_CAN_RELEASE_DANGEROUS_CONTENTS', false);" >> /var/www/html/mailscanner/conf.php
        echo "define('DOMAINADMIN_CAN_SEE_DANGEROUS_CONTENTS', false);" >> /var/www/html/mailscanner/conf.php
      fi

      PWDRESETPRESENT=`grep define\(\'PWD_RESET\' /var/www/html/mailscanner/conf.php`
      if [[ -z $PWDRESETPRESENT ]]; then
        sed -i "/^define('DOMAINADMIN_CAN_SEE_DANGEROUS_CONTENTS'/ a\\\n/* Password Reset */\n// Give users the ability to reset a forgotten password.\ndefine('PWD_RESET', false);\n// Number of hours link is valid for.\ndefine('RESET_LINK_EXPIRE',1);\n// Set the following 2 variables (and uncomment) if you wish to define\n// an alternative sender name and address for password resets.\n// NOTE: Both must be set, otherwise it will use the default settings.\n// define('PWD_RESET_FROM_NAME', 'Some other name'); // Set if you wish reset email sent from alternative name.\n// define('PWD_RESET_FROM_ADDRESS', 'support@yourdomain.com'); // Set is you wish reset email sent from alternative address.\n/* End Password Reset */" /var/www/html/mailscanner/conf.php
      fi

      # Issue #347 - Missing defines in latest MailWatch
      SHOW_MORE_INFO_ON_REPORT_GRAPH_PRESENT=`grep define\(\'SHOW_MORE_INFO_ON_REPORT_GRAPH\' /var/www/html/mailscanner/conf.php`
      if [[ -z $SHOW_MORE_INFO_ON_REPORT_GRAPH_PRESENT ]]; then
        sed -i "/^define('SHOW_DOC'/ a\\\n// Show supplemental Postfix info in report, enable when using Postix_relay tool\ndefine('SHOW_MORE_INFO_ON_REPORT_GRAPH', false);" /var/www/html/mailscanner/conf.php
      fi

      LDAP_PROTOCOL_VERSION_PRESENT=`grep define\(\'LDAP_PROTOCOL_VERSION\' /var/www/html/mailscanner/conf.php`
      if [[ -z $LDAP_PROTOCOL_VERSION_PRESENT ]]; then
        sed -i "/^define('LDAP_PORT'/ a\define('LDAP_PROTOCOL_VERSION', 3);" /var/www/html/mailscanner/conf.php
      fi

      MAILWATCH_MAIL_PORT_PRESENT=`grep define\(\'MAILWATCH_MAIL_PORT\' /var/www/html/mailscanner/conf.php`
      if [[ -z $MAILWATCH_MAIL_PORT_PRESENT ]]; then
        sed -i "/^define('MAILWATCH_MAIL_HOST'/ a\define('MAILWATCH_MAIL_PORT', '25');" /var/www/html/mailscanner/conf.php
      fi

      MS_SHARE_DIR_PRESENT=`grep define\(\'MS_SHARE_DIR\' /var/www/html/mailscanner/conf.php`
      if [[ -z $MS_SHARE_DIR_PRESENT ]]; then
        sed -i "/^define('MS_CONFIG_DIR'/ a\define('MS_SHARE_DIR', '/usr/share/MailScanner/'); // path for ConfigDefs.pl file" /var/www/html/mailscanner/conf.php
      fi

      DISPLAY_IP_PRESENT=`grep define\(\'DISPLAY_IP\' /var/www/html/mailscanner/conf.php`
      if [[ -z $DISPLAY_IP_PRESENT ]]; then
        sed -i "/^define('STATUS_REFRESH'/ a\\\n// Display Client IP Address on message listing\ndefine('DISPLAY_IP', false);" /var/www/html/mailscanner/conf.php
      fi

      RESOLVE_IP_ON_DISPLAY_PRESENT=`grep define\(\'RESOLVE_IP_ON_DISPLAY\' /var/www/html/mailscanner/conf.php`
      if [[ -z $RESOLVE_IP_ON_DISPLAY_PRESENT ]]; then
        sed -i "/^define('DISPLAY_IP'/ a\// Set to true if you want to DNS resolve the IP address displayed (will slow page load)\ndefine('RESOLVE_IP_ON_DISPLAY', false);" /var/www/html/mailscanner/conf.php
      fi

      USER_SELECTABLE_LANG_PRESENT=`grep define\(\'USER_SELECTABLE_LANG\' /var/www/html/mailscanner/conf.php`
      if [[ -z $USER_SELECTABLE_LANG_PRESENT ]]; then
        sed -i "/^define('LANG'/ a\\\n// Optional: If USER_SELECTABLE_LANG is defined and the value contains more than one language then the user gets a dropdown\n// in the gui to change the language of his browser. The selectable languages are defined as a comma separated list.\n//define('USER_SELECTABLE_LANG', 'de,en,fr,it,nl,pt_br');" /var/www/html/mailscanner/conf.php
      fi

      # Is greylisting enabled?  Add back menu item...
      if [[ -n "`grep inet:127.0.0.1:2501 /etc/postfix/main.cf`" ]]; then
        sed -i "/^define('SHOW_GREYLIST'/ c\define('SHOW_GREYLIST', true);" /var/www/html/mailscanner/conf.php
      else
        sed -i "/^define('SHOW_GREYLIST'/ c\define('SHOW_GREYLIST', false);" /var/www/html/mailscanner/conf.php
      fi

      # Little CSS fix for overall menu width
      sed -i "/^    min-width: 960px;/ c\    min-width: 1060px;" /var/www/html/mailscanner/style.css

      # Issue #39 Add link for Webmin in MailWatch
      sed -i "/^    echo '<li><a href=\"mailgraph.php\">/a\    \$hostname = gethostname\(\);\n    echo '<li><a href=\"https://' \. \$hostname \. ':10000\">Webmin</a>';" other.php

      # Upgrade database
      /usr/bin/php /usr/src/EFA/MailWatch-$MAILWATCHBRANCH/upgrade.php --skip-user-confirm /var/www/html/mailscanner/functions.php

      # Cleanup
      rm -rf /usr/src/EFA/MailWatch-develop
      rm -rf /usr/src/EFA/MailWatch-master

      # Update the version of mailwatch in EFA-Config
      sed -i "/MAILWATCHVERSION:/ c\MAILWATCHVERSION:$MAILWATCHVERSION" /etc/EFA-Config

      # Add Munin to Mailwatch
      sed -i "/^    \/\*End EFA\*/ c\    \$efa_config = preg_grep('/^MUNINPWD/', file('/etc/EFA-Config'));\n    foreach(\$efa_config as \$num => \$line) {\n      if (\$line) {\n        \$munin_pass = chop(preg_replace('/^MUNINPWD:(.*)/','\$1', \$line));\n      }\n    }\n    echo '<li><a href=\"https://munin:' . \$munin_pass . '@'  . \$hostname . '/munin\">View Munin Statistics</a>';\n    /*End EFA*/" /var/www/html/mailscanner/other.php

      # Issue 204 -- UTF8 Characters Not Rendering in MailWatch
      # yum -y install php-mbstring

      # EFA Version
      # Issue #346
      cat >> /var/www/html/mailscanner/functions.php << EOF
/**
 * EFA Version
 */
function efa_version()
{
  return file_get_contents( '/etc/EFA-Version', NULL, NULL, 0, 15 );
}
EOF
      sed -i "/^    echo mailwatch_version/a \    echo ' running on ' . efa_version();" /var/www/html/mailscanner/functions.php

      /usr/bin/php /usr/local/sbin/geoip_update_cmd.php
      # Reset ownership on geoip dat files
      chown apache:apache /var/www/html/mailscanner/temp/*dat

      service httpd start
      service MailScanner start
  fi
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Update vmtools function
#----------------------------------------------------------------#
function update-vmtools() {
  # Issue #55 reapply open-vm-tools, if present and upgrade if new version is available
  if [[ -f "/usr/local/bin/vmware-toolbox-cmd" ]]; then

    # Remove source compiled version of open-vm-tools
    if [[ -n "`rpm -q open-vm-tools | grep not\ installed`" ]]; then
      service vmtoolsd stop

      # Cleanup existing open-vm-tools
      rm -f /usr/local/lib/libvmtools*
      rm -f /usr/local/lib/libhgfs*
      rm -f /usr/local/lib/libguestlib*
      rm -rf /usr/local/lib/open-vm-tools
      rm -f /usr/local/bin/vmware*
      rm -f /usr/local/bin/vmtoolsd
      rm -f /usr/local/sbin/mount.vmhgfs
      rm -rf /etc/vmware-tools
      rm -f /usr/local/include/vmci_sockets.h
      rm -rf /usr/local/include/vmGuestLib

      # Install open-vm-tools from EPEL
      yum -y install open-vm-tools
      [[ $? -ne 0 ]] && abort

      sed -i "/VMTOOLSVERSION:/d" /etc/EFA-Config
    else
      yum -y update open-vm-tools
      [[ $? -ne 0 ]] && abort
    fi

    chkconfig vmtoolsd on
    service vmtoolsd start
  fi
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Function to update Webmin
#----------------------------------------------------------------#
function update-webmin() {
  if [[ $WEBMINVERSION != "`grep WEBMINVERSION /etc/EFA-Config | sed 's/^.*://'`" && "`rpm -q webmin`" == "webmin-$WEBMINVERSION.noarch" ]]; then
    # shoot a hole in webmin so we can change settings
    echo "localauth=/usr/sbin/lsof" >> /etc/webmin/miniserv.conf
    echo "referer=1" >> /etc/webmin/config
    echo "referers=" >> /etc/webmin.config
    sed -i '/^referers_none=1/ c\referers_none=0' /etc/webmin/config
    service webmin restart

    # Remove modules we don't need.
    curl -k  --tlsv1.2 "https://localhost:10000/webmin/delete_mod.cgi?mod=adsl-client&mod=bacula-backup&mod=burner&mod=pserver&mod=cluster-copy&mod=exim&mod=shorewall6&mod=sendmail&confirm=Delete&acls=1&nodeps="
    curl -k  --tlsv1.2 "https://localhost:10000/webmin/delete_mod.cgi?mod=cluster-webmin&mod=bandwidth&mod=cluster-passwd&mod=cluster-cron&mod=cluster-shell&mod=cluster-usermin&mod=cluster-useradmin&confirm=Delete&acls=1&nodeps="
    curl -k  --tlsv1.2 "https://localhost:10000/webmin/delete_mod.cgi?mod=cfengine&mod=dhcpd&mod=dovecot&mod=fetchmail&mod=filter&mod=frox&mod=tunnel&mod=heartbeat&mod=ipsec&mod=jabber&mod=krb5&confirm=Delete&acls=1&nodeps="
    curl -k  --tlsv1.2 "https://localhost:10000/webmin/delete_mod.cgi?mod=ldap-client&mod=ldap-server&mod=ldap-useradmin&mod=firewall&mod=mon&mod=majordomo&mod=exports&mod=openslp&mod=pap&mod=ppp-client&mod=pptp-client&mod=pptp-server&mod=postgresql&confirm=Delete&acls=1&nodeps="
    curl -k  --tlsv1.2 "https://localhost:10000/webmin/delete_mod.cgi?mod=lpadmin&mod=proftpd&mod=procmail&mod=qmailadmin&mod=smart-status&mod=samba&mod=shorewall&mod=sarg&mod=squid&mod=usermin&mod=vgetty&mod=wuftpd&mod=webalizer&confirm=Delete&acls=1&nodeps="

    # fix the holes again
    sed -i '/^referers_none=0/ c\referers_none=1' /etc/webmin/config
    sed -i '/referer=1/d' /etc/webmin/config
    sed -i '/referers=/d' /etc/webmin/config
    sed -i '/localauth=\/usr\/sbin\/lsof/d' /etc/webmin/miniserv.conf
    service webmin restart

    # Update version to EFA-Config
    sed -i "/^WEBMINVERSION:/ c\WEBMINVERSION:$WEBMINVERSION" /etc/EFA-Config
  fi
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# SQLGrey Web Interface
# http://www.vanheusden.com/sgwi
#----------------------------------------------------------------#
update_sgwi () {
    mkdir -p /var/EFA/backup/$VERSION/ > /dev/null 2>&1
    mv /var/www/html/sgwi /var/EFA/backup/$VERSION/ > /dev/null 2>&1

    #### Commit Phase #####
    cd /usr/src/EFA
    tar -xvzf $STAGING/Files/sqlgreywebinterface-1.1.9.tgz
    cd sqlgreywebinterface-1.1.9

    # Place next to mailwatch
    mkdir /var/www/html/sgwi
    mv * /var/www/html/sgwi

    # add db credential
    # Issue #66 Grab all passwords from EFA-Config
    sed -i '/^$db_user/ c\$db_user        = "sqlgrey";' /var/www/html/sgwi/includes/config.inc.php
    sed -i "/^\$db_pass/ c\$efa_array = preg_grep('/^SQLGREYSQLPWD/', file('/etc/EFA-Config'));\nforeach(\$efa_array as \$num => \$line) {\n  if (\$line) {\n    \$db_pass = chop(preg_replace('/^SQLGREYSQLPWD:(.*)/','\$1',\$line));\n  }\n}" /var/www/html/sgwi/includes/config.inc.php

    # Secure sgwi from direct access
    cd /var/www/html/sgwi
    ln -s ../mailscanner/login.function.php login.function.php
    ln -s ../mailscanner/login.php login.php
    ln -s ../mailscanner/functions.php functions.php
    ln -s ../mailscanner/checklogin.php checklogin.php
    ln -s ../mailscanner/conf.php conf.php
    mkdir images
    cp ../mailscanner/images/EFAlogo-79px.png ./images/mailwatch-logo.png
    cp ../mailscanner/images/favicon.png ./images/favicon.png
    sed -i "/^<?php/ a\//Begin EFA\nsession_start();\nrequire('login.function.php');\n\nif (\$_SESSION['user_type'] != 'A') die('Access Denied');\n//End EFA" /var/www/html/sgwi/index.php
    sed -i "/^<?php/ a\//Begin EFA\nsession_start();\nrequire('login.function.php');\n\nif (\$_SESSION['user_type'] != 'A') die('Access Denied');\n//End EFA" /var/www/html/sgwi/awl.php
    sed -i "/^<?php/ a\//Begin EFA\nsession_start();\nrequire('login.function.php');\n\nif (\$_SESSION['user_type'] != 'A') die('Access Denied');\n//End EFA" /var/www/html/sgwi/connect.php
    sed -i "/^<?php/ a\//Begin EFA\nsession_start();\nrequire('login.function.php');\n\nif (\$_SESSION['user_type'] != 'A') die('Access Denied');\n//End EFA" /var/www/html/sgwi/opt_in_out.php
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Function to download file
#----------------------------------------------------------------#
function download_update() {
  /usr/bin/wget -O $STAGING/$UPDATE $MIRROR/update/$UPDATE
  [[ $? -ne 0 ]] && abort
  /usr/bin/wget -O $STAGING/$UPDATE.md5 $MIRROR/update/$UPDATE.md5
  [[ $? -ne 0 ]] && abort
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Function to check the MD5
#----------------------------------------------------------------#
function check_md5() {
  # Grab md5 from file
  checksum1=$(cat $STAGING/$UPDATE.md5 | awk '{print $1}')
  # Calculate md5
  checksum2=$(md5sum $STAGING/$UPDATE | awk '{print $1}')
  if [[ "$checksum1" != "$checksum2" ]]; then
    echo "Fatal:  $UPDATE md5 checksum does not match!  Aborting..."
    abort
  fi
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Abort Routine
#----------------------------------------------------------------#
function abort() {
  [[ -n $STAGING ]] && rm -rf $STAGING

  echo "" >> $TMPMAIL
  echo "Update to Version $VERSION FAILED.  Updates cancelled." >> $TMPMAIL
  echo "Please visit http://www.efa-project.org for more information." >> $TMPMAIL
  cat $TMPMAIL | $SENDMAIL -t
  rm $TMPMAIL

  echo "Update to Version $VERSION FAILED.  Updates cancelled."
  echo "Please visit http://www.efa-project.org for more information."
  exit 1
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Function to update system with yum
#----------------------------------------------------------------#
function yum_update() {
  yum -y update
  [[ $? -ne 0 ]] && abort
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Finalize
#----------------------------------------------------------------#
function finalize() {
  # Write the latest version number
  echo "EFA-$VERSION" > /etc/EFA-Version
  sed -i "/--- Welcome to EFA-/ c\--- Welcome to EFA-$VERSION ---" /etc/issue

  # Finalize the mail
  echo "" >> $TMPMAIL
  echo "Please visit https://efa-project.org for more information." >> $TMPMAIL
  echo "Please reboot the system as soon as possible." >> $TMPMAIL
}
#----------------------------------------------------------------#

# +---------------------------------------------------+
# Function to create a random password
# +---------------------------------------------------+
function randompw()
{
  PASSWD=""
  PASSWD=`tr -cd '[:alnum:]' < /dev/urandom | fold -w30 | head -n1`
}
# +---------------------------------------------------+

#----------------------------------------------------------------#
# Where to start
#----------------------------------------------------------------#
run_update
finalize
