#!/bin/bash
# +--------------------------------------------------------------------+
# EFA update script
# Version 20140117
# +--------------------------------------------------------------------+
# Copyright (C) 2012~2014  http://www.efa-project.org
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# +--------------------------------------------------------------------+

#----------------------------------------------------------------#
# Variables
#----------------------------------------------------------------#
logdir="/var/log/EFA"
gitdlurl="https://raw.github.com/E-F-A/v3"
mirror="http://dl.efa-project.org"
mirrorpath="/update"
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# get-update path
#----------------------------------------------------------------#
function get_update_path() {
  get_cversion
  if [[ $CVERSION == "EFA-3.0.0.0" ]]
    then
      update-3.0.0.1
  fi
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Update to EFA-3.0.0.1 
#----------------------------------------------------------------#
function update-3.0.0.1() {
  echo "Staring update to E.F.A. 3.0.0.1"
  VERSION="3.0.0.1"
  
  # Upgrade OS to latest version
  yum -y update
  
  # grab latest version of EFA-Configure
  rm -f /usr/local/sbin/EFA-Configure
  /usr/bin/wget -O /usr/local/sbin/EFA-Configure $gitdlurl/$VERSION/build/EFA/EFA-Configure
  chmod 700 /usr/local/sbin/EFA-Configure
  
  # fix issue 32 clean quarantine not enabled
  sed -i '/$disabled = 1;/ c\$disabled = 0;' /etc/cron.daily/clean.quarantine

  # fix issue 23 
  yum -y remove cyrus-sasl-sql cyrus-sasl-ldap

  # fix issue 24 Disable Deliver Cleaned Messages
  sed -i '/^Deliver Cleaned Messages =/ c\Deliver Cleaned Messages = No' /etc/MailScanner/MailScanner.conf
  
  # Download latest learn-msg.cgi (fix issue 41)
  rm -f /var/www/cgi-bin/learn-msg.cgi
  cd /var/www/cgi-bin
  wget $gitdlurl/$VERSION/build/EFA/learn-msg.cgi
  chmod 755 learn-msg.cgi

  # Update Version Number
  echo "EFA-$VERSION" > /etc/EFA-Version
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Function get current version number
#----------------------------------------------------------------#
function get_cversion() {
  if [ -f /etc/EFA-Version ]
    then
      CVERSION="`head -1 /etc/EFA-Version`" 
    else
      echo "ERROR: No valid version file found on this system." 
      echo "ERROR: exiting now"
      exit 0
  fi
  
  # Check if we run an beta version
  if [[ $CVERSION =~ ^EFA\-[0-9]{1}\.[0-9]{1}\.[0-9]{1}\.[0-9]{1}-beta$ ]]
    then
      echo "ERROR: You seem to be running an beta version, no upgrade possible."
      echo "ERROR: please look at http://www.efa-project.org for more information."
      echo "ERROR: exiting now"
      exit 0
  fi
  
  # Check if CVERSION is an valid Version file
  if ! [[ $CVERSION =~ ^EFA\-[0-9]{1}\.[0-9]{1}\.[0-9]{1}\.[0-9]{1}$ ]]
    then
      echo "ERROR: The version file on your system does not seem to be valid."
      echo "ERROR: exiting now"
      exit 0
  fi
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Check if we are root
#----------------------------------------------------------------#
function user_check() {
  if [ `whoami` == root ]
    then
      echo "[EFA] Good you are root"
  else
    echo "[EFA] Please become root to run this update"
    exit 0
  fi
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Where to start
#----------------------------------------------------------------#
user_check
get_update_path
