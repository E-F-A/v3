#!/bin/bash
# +--------------------------------------------------------------------+
# EFA update script
# Version 20140307
# +--------------------------------------------------------------------+
# Copyright (C) 2012~2014  http://www.efa-project.org
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# +--------------------------------------------------------------------+

#----------------------------------------------------------------#
# Variables
#----------------------------------------------------------------#
logdir="/var/log/EFA"
gitdlurl="https://raw.github.com/E-F-A/v3"
mirror="http://dl.efa-project.org"
mirrorpath="update"
yumexclude="kernel* mysql* postfix* mailscanner* clamav*"
ADMINEMAIL="`cat /etc/EFA-Config | grep ADMINEMAIL | sed 's/.*://'`"
MAILFROM="$ADMINEMAIL"
MAILTO="$ADMINEMAIL"
MAILSUBJECT="EFA Update Complete For: `hostname`"
SENDMAIL="/usr/lib/sendmail"
TMPMAIL="/tmp/tempmail"
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# get-update path
#----------------------------------------------------------------#
function get_update_path() {
  get_cversion
  if [[ $CVERSION == "EFA-3.0.0.0" ]]
    then
      yum_update
      update-3.0.0.1
      update-3.0.0.2
      update-3.0.0.3
      update-3.0.0.4
      finalize
  elif [[ $CVERSION == "EFA-3.0.0.1" ]]
    then
      yum_update
      update-3.0.0.2
      update-3.0.0.3
      update-3.0.0.4
      finalize
  elif [[ $CVERSION == "EFA-3.0.0.2" ]]
    then
      yum_update
      update-3.0.0.3
      update-3.0.0.4
      finalize
  elif [[ $CVERSION == "EFA-3.0.0.3" ]]
    then
      yum_update
      update-3.0.0.4
      finalize
  fi
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Update to EFA-3.0.0.4
#----------------------------------------------------------------#
function update-3.0.0.4() {

  echo "Staring update to E.F.A. 3.0.0.4"
  VERSION="3.0.0.4"
   
  #Issue #63 Remove old kam.cf.backup from Spamassassin directory
  rm -f /etc/mail/spamassassin/kam.cf.backup

  #Issue #18 Email signature sanitation
  rm -f /usr/lib/MailScanner/MailScanner/CustomFunctions/CustomAction.pm
  /usr/bin/wget -O /usr/lib/MailScanner/MailScanner/CustomFunctions/CustomAction.pm $gitdlurl/$VERSION/build/EFA/CustomAction.pm --no-check-certificate

  #Issue #65 Fix EFA-SA-Update file location
  rm -f /etc/cron.daily/EFA-SA-Update
  rm -f /usr/local/sbin/EFA-SA-Update
  /usr/bin/wget -O /usr/local/sbin/EFA-SA-Update $gitdlurl/$VERSION/build/EFA/EFA-SA-Update --no-check-certificate
  chmod 755 /usr/local/sbin/EFA-SA-Update
 
  echo "Update to 3.0.0.4 complete." 
  echo ""
  echo "Please visit http://www.efa-project.org for more information."

  echo "From: $MAILFROM" > $TMPMAIL
  echo "To: $MAILTO" >> $TMPMAIL
  echo "Reply-To: $MAILFROM" >> $TMPMAIL
  echo "Subject: $MAILSUBJECT" >> $TMPMAIL
  echo "" >> $TMPMAIL
  echo "Update to 3.0.0.4 complete." >> $TMPMAIL
  echo "" >> $TMPMAIL
  echo "Please visit http://www.efa-project.org for more information." >> $TMPMAIL
  cat $TMPMAIL | $SENDMAIL -t
  rm $TMPMAIL
}

#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Update to EFA-3.0.0.3
#----------------------------------------------------------------#
function update-3.0.0.3() {

  echo "Staring update to E.F.A. 3.0.0.3"
  VERSION="3.0.0.3"

  # Kernel update check
  # If the kernel has updated in a previous update, and
  # the system has not rebooted, do not proceed until running
  # on latest kernel
  CURRENTKERNEL="`uname -r`"
  LATESTKERNEL="`grep -m 1 CentOS /boot/grub/menu.lst | sed 's/.*(//' | sed 's/)//'`"
  if [[ $CURRENTKERNEL != $LATESTKERNEL ]]; then 
    echo "Your system has an updated kernel, but you are not running"
    echo "on the latest kernel.  Please restart your system and run"
    echo "EFA-Update after restart." 

    echo "From: $MAILFROM" > $TMPMAIL
    echo "To: $MAILTO" >> $TMPMAIL
    echo "Reply-To: $MAILFROM" >> $TMPMAIL
    echo "Subject: Restart needed to update to 3.0.0.3 " >> $TMPMAIL
    echo "" >> $TMPMAIL
    echo "Update to 3.0.0.3 is pending." >> $TMPMAIL
    echo "Your system has an updated kernel, but you are not running" >> $TMPMAIL
    echo "on the latest kernel.  Please restart your system and run" >> $TMPMAIL
    echo "EFA-Update after restart." >> $TMPMAIL
    cat $TMPMAIL | $SENDMAIL -t
    rm $TMPMAIL
    exit 1
  fi

  # Issue #62 install perl-Compress-Raw-Zlib
  yum -y install perl-Compress-Raw-Zlib

  # Create /var/EFA/lib
  mkdir /var/EFA/lib
  mkdir /var/EFA/lib/EFA-Configure
  
  # grab latest version of EFA-Configure
  rm -f /usr/local/sbin/EFA-Configure
  /usr/bin/wget -O /usr/local/sbin/EFA-Configure $gitdlurl/$VERSION/build/EFA/EFA-Configure --no-check-certificate
  chmod 700 /usr/local/sbin/EFA-Configure

  # Issue #16 System/db/settings backup
  mkdir -p /var/EFA/backup
  /usr/bin/wget -O /usr/local/sbin/EFA-Backup $gitdlurl/$VERSION/build/EFA/EFA-Backup --no-check-certificate
  chmod 700 /usr/local/sbin/EFA-Backup
  /usr/bin/wget -O /etc/cron.daily/EFA-Backup-cron $gitdlurl/$VERSION/build/EFA/EFA-Backup-cron --no-check-certificate
  chmod 700 /etc/cron.daily/EFA-Backup-cron

  # Issue #60 kam.cf.backup parsed by spamassassin
  mkdir -p /var/EFA/backup/KAM
  rm -f /etc/cron.daily/EFA-SA-Update
  /usr/bin/wget -O /etc/cron.daily/EFA-SA-Update $gitdlurl/$VERSION/build/EFA/EFA-SA-Update --no-check-certificate
  chmod 755 /etc/cron.daily/EFA-SA-Update

  # Issue #17 Trusted Network Rules
  touch /etc/sysconfig/EFA_trusted_networks
  yum -y install perl-Net-Netmask
  /usr/bin/wget -O /var/www/html/denylearned.html $gitdlurl/$VERSION/build/EFA/denylearned.html --no-check-certificate
  rm -f /var/www/cgi-bin/learn-msg.cgi
  /usr/bin/wget -O /var/www/cgi-bin/learn-msg.cgi $gitdlurl/$VERSION/build/EFA/learn-msg.cgi --no-check-certificate
  chmod 755 /var/www/cgi-bin/learn-msg.cgi
  EFASQLPWD=`grep EFASQLPWD /etc/EFA-Config | sed 's/^.*://'`
  sed -i "/^\$db_pass =/ c\$db_pass = \"$EFASQLPWD\";" /var/www/cgi-bin/learn-msg.cgi 
  
  #  Issue #50, clean sqlgrey source files
  rm -rf /etc/cron.weekly/sqlgrey-1.8.0*

  #  Issue #53, fix postfix queues after yum update
  chown postfix:apache /var/spool/postfix/incoming
  chown postfix:apache /var/spool/postfix/hold
  chmod 740 /var/spool/postfix/incoming
  chmod 740 /var/spool/postfix/hold

  #  Issue #47 and #48, fix typo in lists.php and Fix All Release in MailWatch
  service httpd stop
  service MailScanner stop
  # Backup existing MailWatch
  mkdir -p /var/EFA/backup/3.0.0.2
  mv /var/www/html/mailscanner /var/EFA/backup/3.0.0.2
  mv /usr/lib/MailScanner/MailScanner/CustomFunctions/MailWatch.pm /var/EFA/backup/3.0.0.2
  mv /usr/local/bin/mailwatch/tools /var/EFA/backup/3.0.0.2
  # Fetch new MailWatch
  cd /usr/src/EFA
  wget $mirror/build/$VERSION/MailWatch-1.2.0-master-GIT-8e1a202895.zip
  unzip -d . MailWatch-1.2.0-master-GIT-8e1a202895.zip
  cd 1.2.0-master/MailScanner_perl_scripts
  MAILWATCHSQLPWD=`grep MAILWATCHSQLPWD /etc/EFA-Config | sed 's/^.*://'`
  sed -i "/^my(\$db_user) =/ c\my(\$db_user) = 'mailwatch';" MailWatch.pm
  sed -i "/^my(\$db_pass) =/ c\my(\$db_pass) = '$MAILWATCHSQLPWD';" MailWatch.pm

  mv -f MailWatch.pm /usr/lib/MailScanner/MailScanner/CustomFunctions/
  # no diff SQLBLackWhiteList.pm
  # no diff SQLSpamSettings.pm
  cd ..
  mv tools /usr/local/bin/mailwatch
  rm -f /usr/local/bin/mailwatch/tools/Cron_jobs/INSTALL
  chmod +x /usr/local/bin/mailwatch/tools/Cron_jobs/*
  mv mailscanner /var/www/html
  # MSRE support in this snapshot, but it is not ready, skipping 
  cd /var/www/html/mailscanner
  chown root:apache images
  chmod ug+rwx images
  chown root:apache images/cache
  chmod ug+rwx images/cache
  chown root:apache temp
  chmod ug+rwx temp
  rm -rf docs
  
  # Build new conf.php
  cp /var/EFA/backup/3.0.0.2/mailscanner/conf.php /var/www/html/mailscanner
  echo "" >> /var/www/html/mailscanner/conf.php
  echo "// Enable MailScanner Rule Editor" >> /var/www/html/mailscanner/conf.php
  echo "// Initially disabled as other config needs to be done to use it" >> /var/www/html/mailscanner/conf.php
  echo "define('MSRE', false);" >> /var/www/html/mailscanner/conf.php
  echo "define('MSRE_RELOAD_INTERVAL', 5);" >> /var/www/html/mailscanner/conf.php
  echo "define('MSRE_RULESET_DIR', \"/etc/MailScanner/rules\");" >> /var/www/html/mailscanner/conf.php

  # Add favicons back
  /bin/cp -f /var/EFA/backup/3.0.0.2/mailscanner/favicon.ico /var/www/html/mailscanner/
  /bin/cp -f /var/EFA/backup/3.0.0.2/mailscanner/favicon.ico /var/www/html/mailscanner/images
  /bin/cp -f /var/EFA/backup/3.0.0.2/mailscanner/favicon.ico /var/www/html/mailscanner/images/favicon.png

  # Add back EFA Branding
  cd /var/www/html/mailscanner/images
  cp /var/EFA/backup/3.0.0.2/mailscanner/images/EFAlogo-47px.gif .
  cp /var/EFA/backup/3.0.0.2/mailscanner/images/EFAlogo-79px.png .
  mv mailwatch-logo.gif mailwatch-logo.gif.orig
  mv mailwatch-logo.png mailwatch-logo.png.orig
  mv mailscannerlogo.gif mailscannerlogo.gif.orig
  ln -s EFAlogo-79px.png mailwatch-logo.gif
  ln -s EFAlogo-79px.png mailwatch-logo.png
  ln -s EFAlogo-47px.gif mailscannerlogo.gif
  
  # Alter color scheme
  sed -i 's/#F7CE4A/#719b94/g' /var/www/html/mailscanner/style.css

  # Add back Mailgraph link
  cd /var/www/html/mailscanner
  cp other.php other.php.orig
  sed -i "/^    echo '<li><a href=\"geoip_update.php\">/a\    /*Begin EFA*/\n    echo '<li><a href=\"mailgraph.php\">View Mailgraph Statistics</a>';\n    /*End EFA*/" other.php
  cp /var/EFA/backup/3.0.0.2/mailscanner/mailgraph.php .  

  # Fix menu width
  sed -i '/^#menu {$/ a\    min-width:1000px;' /var/www/html/mailscanner/style.css

  # Issue #61 Domain Administrator cannot delete domain only whitelist/blacklis
  sed -i '/^    \$to_domain = \$split\[2\];/{N;s/$/\nelse \{ \$to_domain = \$url_to; \}/}' /var/www/html/mailscanner/lists.php
  
  # Reconfigure Greylisting as previously configured
  cp functions.php functions.php.orig
  cp /var/EFA/backup/3.0.0.2/mailscanner/grey.php .
  
  # Is greylisting enabled?  Add back menu item...
  if [[ -n "`grep inet:127.0.0.1:2501 /etc/postfix/main.cf`" ]]; then
     sed -i "/^            \$nav\['docs.php'\] = \"Documentation\";/{N;s/$/\n        \/\/Begin EFA\n        if \(\$_SESSION\['user_type'\] == 'A'\) \{\n            \$nav\['grey.php'\] = \"greylist\";\n        \}\n        \/\/End EFA/}" /var/www/html/mailscanner/functions.php
  fi 

  service MailScanner start
  service httpd start

  # Issue #55 reapply open-vm-tools, if present 
  if [[ "`/usr/local/bin/vmware-toolbox-cmd -v`" == "9.4.0.25793 (build-1280544)" ]]; then
    service vmtoolsd stop
    
    # Cleanup existing open-vm-tools 
    rm -f /etc/init.d/vmtoolsd
    rm -f /usr/local/lib/libvmtools*
    rm -f /usr/local/lib/libhgfs*
    rm -f /usr/local/lib/libguestlib*
    rm -rf /usr/local/lib/open-vm-tools
    rm -f /usr/local/bin/vmware*
    rm -f /usr/local/bin/vmtoolsd
    rm -f /usr/local/sbin/mount.vmhgfs
    rm -rf /etc/vmware-tools
    rm -f /usr/local/include/vmci_sockets.h
    rm -rf /usr/local/include/vmGuestLib

    cd /usr/src/EFA
    wget $mirror/build/3.0.0.0/open-vm-tools-9.4.0-1280544.tar.gz
    tar xvzf open-vm-tools-9.4.0-1280544.tar.gz
    cd open-vm-tools-9.4.0-1280544
    ./configure --without-x
    make
    make install
    /usr/bin/wget -O /etc/init.d/vmtoolsd $gitdlurl/$VERSION/build/EFA/vmtoolsd.init --no-check-certificate
    chmod 755 /etc/init.d/vmtoolsd
    # lib adjustment
    ln -s /usr/lib64/libdnet.so.1 /usr/lib64/libdnet.1 > /dev/null 2>&1
    chkconfig vmtoolsd on
    service vmtoolsd start
  fi

  # Issue #30 filter non-spam from quarantine reports
  sed -i "/^ ((to_address=%s) OR (to_domain=%s))$/ a\AND\n a.isspam>0" /usr/local/bin/mailwatch/tools/Cron_jobs/quarantine_report.php

  # Cleanup
  cd /
  rm -rf /usr/src/EFA/*

  # Notify admin of update completion and notes

  echo ""
  echo "Update to 3.0.0.3 complete. Please note the following."
  echo ""
  echo "MailWatch has been updated. If you have custom tweaks,"
  echo "please restore those tweaks in the new MailWatch."
  echo "Look in /var/EFA/backup/3.0.0.2 for backed up files."
  echo ""
  echo "The kernel has likely updated."
  echo "If you are using vmware-tools (commercial version)"
  echo "please restart your E.F.A. and install the latest version"
  echo ""
  echo "Please visit http://www.efa-project.org for more information." 

  echo "From: $MAILFROM" > $TMPMAIL
  echo "To: $MAILTO" >> $TMPMAIL
  echo "Reply-To: $MAILFROM" >> $TMPMAIL
  echo "Subject: $MAILSUBJECT" >> $TMPMAIL
  echo "" >> $TMPMAIL
  echo "Update to 3.0.0.3 complete. Please note the following." >> $TMPMAIL
  echo "" >> $TMPMAIL
  echo "MailWatch has been updated. If you have custom tweaks," >> $TMPMAIL
  echo "please restore those tweaks in the new MailWatch." >> $TMPMAIL
  echo "Look in /var/EFA/backup/3.0.0.2 for backed up files." >> $TMPMAIL
  echo "" >> $TMPMAIL
  echo "The kernel has likely updated." >> $TMPMAIL
  echo "If you are using vmware-tools (commercial version)" >> $TMPMAIL
  echo "please restart your E.F.A. and install the latest version" >> $TMPMAIL

  echo "" >> $TMPMAIL
  echo "Please visit http://www.efa-project.org for more information." >> $TMPMAIL
  cat $TMPMAIL | $SENDMAIL -t
  rm $TMPMAIL

}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Update to EFA-3.0.0.2 
#----------------------------------------------------------------#
function update-3.0.0.2() {

  echo "Staring update to E.F.A. 3.0.0.2"
  VERSION="3.0.0.2"
 
  # fix issue Urgent: learn-msg.cgi broken #44
  EFASQLPWD=`grep EFASQLPWD /etc/EFA-Config | sed 's/^.*://'`
  sed -i "/^\$db_pass =/ c\$db_pass = \"$EFASQLPWD\";" /var/www/cgi-bin/learn-msg.cgi
  
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Update to EFA-3.0.0.1 
#----------------------------------------------------------------#
function update-3.0.0.1() {
  echo "Staring update to E.F.A. 3.0.0.1"
  VERSION="3.0.0.1"
  
  # grab latest version of EFA-Configure
  rm -f /usr/local/sbin/EFA-Configure
  /usr/bin/wget -O /usr/local/sbin/EFA-Configure $gitdlurl/$VERSION/build/EFA/EFA-Configure --no-check-certificate
  chmod 700 /usr/local/sbin/EFA-Configure
  
  # fix issue 32 clean quarantine not enabled
  sed -i '/$disabled = 1;/ c\$disabled = 0;' /etc/cron.daily/clean.quarantine

  # fix issue 23 
  yum -y remove cyrus-sasl-sql cyrus-sasl-ldap

  # fix issue 24 Disable Deliver Cleaned Messages
  sed -i '/^Deliver Cleaned Messages =/ c\Deliver Cleaned Messages = No' /etc/MailScanner/MailScanner.conf
  
  # Download latest learn-msg.cgi (fix issue 41)
  rm -f /var/www/cgi-bin/learn-msg.cgi
  cd /var/www/cgi-bin
  wget $gitdlurl/$VERSION/build/EFA/learn-msg.cgi
  chmod 755 learn-msg.cgi
  
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Finalize
#----------------------------------------------------------------#
function finalize() {

  # Write the latest version number
  echo "EFA-$VERSION" > /etc/EFA-Version
  sed -i "/--- Welcome to EFA-/ c\--- Welcome to EFA-$VERSION ---" /etc/issue 

  echo "All done"
  exit 0

}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Function to update system with yum
#----------------------------------------------------------------#
function yum_update() {
  yum -y --exclude="$yumexclude" update
  # Todo, write some logic that checks any of the yumexclude packages and updates them after testing...
  
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Function get current version number
#----------------------------------------------------------------#
function get_cversion() {
  if [ -f /etc/EFA-Version ]
    then
      CVERSION="`head -1 /etc/EFA-Version`" 
    else
      echo "ERROR: No valid version file found on this system." 
      echo "ERROR: exiting now"
      exit 0
  fi
  
  # Check if we run an beta version
  if [[ $CVERSION =~ ^EFA\-[0-9]{1}\.[0-9]{1}\.[0-9]{1}\.[0-9]{1}-beta$ ]]
    then
      echo "ERROR: You seem to be running an beta version, no upgrade possible."
      echo "ERROR: please look at http://www.efa-project.org for more information."
      echo "ERROR: exiting now"
      exit 0
  fi
  
  # Check if CVERSION is an valid Version file
  if ! [[ $CVERSION =~ ^EFA\-[0-9]{1}\.[0-9]{1}\.[0-9]{1}\.[0-9]{1}$ ]]
    then
      echo "ERROR: The version file on your system does not seem to be valid."
      echo "ERROR: exiting now"
      exit 0
  fi
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Check if we are root
#----------------------------------------------------------------#
function user_check() {
  if [ `whoami` == root ]
    then
      echo "[EFA] Good you are root"
  else
    echo "[EFA] Please become root to run this update"
    exit 0
  fi
}
#----------------------------------------------------------------#

#----------------------------------------------------------------#
# Where to start
#----------------------------------------------------------------#
user_check
get_update_path
