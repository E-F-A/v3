# +---------------------------------------------------+
# System Restore
# +---------------------------------------------------+
function func_system-restore() {
  func_echo-header

  echo -e ""
  echo -e "System Restore"
  echo -e ""
  echo -e "$red !!!WARNING!!! $clean"
  echo -e "System Restore is intended to be used in disaster recovery"
  echo -e "situations only as a last resort! Rolling back the system"
  echo -e "to a recent backup can have consequences, such as the need to"
  echo -e "clean up MySQL databases and loss of recent configuration changes."
  echo -e ""
  echo -en "$green[EFA]$clean Are you sure you want to continue? (y/N):"
  local TMPRECOVER
  read TMPRECOVER
  local flag=0
  while [[ $flag != "1" ]]
    do
      if [[ $TMPRECOVER == "N" || $TMPRECOVER == "n" || $TMPRECOVER == "" ]]; then
        flag=1
      elif [[ $TMPRECOVER = "Y" || $TMPRECOVER == "y" ]]; then
        # Gather backups
        local BACKUPLIST
        BACKUPLIST=(`find /var/EFA/backup -type f | grep tar\.gz$`)
        if [[ -n $BACKUPLIST ]]; then
          func_echo-header
          echo -e "Backup Listing"
          echo -e ""
          local tLen=${#BACKUPLIST[@]}
          for (( y=0; y<$tLen; y++ ));
          do
            echo -e "$((y+1))) ${BACKUPLIST[$y]}"
          done
          local flag2=0
          echo -e ""
          echo -en "Choose a backup or press $green (e) $clean to exit:"
          while [[ $flag2 != "1" ]]
          do
            local choice
            read choice
            case $choice in
              +([0-9]))  
                if [[ $choice > 0 && $choice < $((tLen+1)) ]]; then
                  echo -e "You have chosen $green $choice $clean"
                  echo -e ""
                  echo -e "$choice) ${BACKUPLIST[$((choice-1))]}"
                  echo -e ""
                  echo -e "Proceed with restore? (y/N)"
                  local TMPRESTORE
                  read TMPRESTORE
                  local flag3=0
                  while [[ $flag3 != "1" ]]
                  do
                    if [[ $TMPRESTORE == "n" || $TMPRESTORE == "N" || $TMPRESTORE == "" ]]; then
                      flag2=1
                      flag3=1
                    elif [[ $TMPRESTORE == "Y" || $TMPRESTORE == "y" ]]; then
                      echo -e "Beginning Restore of ${BACKUPLIST[$((choice-1))]}..."
                      echo -e
                      cd /var/EFA/backup
                      tar xzvf ${BACKUPLIST[$((choice-1))]} --overwrite
                      cp -rf /var/EFA/backup/backup/etc/* /etc
                      cp -rf /var/EFA/backup/backup/var/* /var
                      cd /var/EFA/backup/backup/sql
                      #fetch SQL root password
                      MYSQLROOTPWD="`grep MYSQLROOTPWD /etc/EFA-Config | sed 's/.*://'`"
                      # Restore SQL databases
                      mysql --user=root --password=$MYSQLROOTPWD < backup.sql
                      rm -rf /var/EFA/backup/backup

                      echo -e "Restore Complete!"
                      echo -e ""
                      echo -e "A restart is needed to complete restore.  Press enter to reboot."
                      pause
                      shutdown -r now
                      flag3=1
                      flag2=1
                      flag=1
                    fi
                  done
                 else
                   echo -e "$red $choice $clean is not a valid choice."
                   echo -en "Choose a backup or press $green e) $clean to exit:"
                 fi
                 ;;
                     e)
                 sleep 2
                 flag3=1
                 flag2=1  
                 flag=1
                 ;;
                     *) 
                   echo -e "$red $choice $clean is not a valid choice."
                   echo -en "Choose a backup or press $green e) $clean to exit:"
                 ;;
            esac
          done
        else
          echo "No backups were found!"
          echo "Press enter to exit."
          pause
        fi
        flag=1
      else
        echo -e "An invalid option $red $TMPRECOVER $clean was entered."
        echo -en "$green[EFA]$clean Are you sure you want to continue? (y/N):"
        read TMPRECOVER
      fi
    done

  sleep 2

}
# +---------------------------------------------------+