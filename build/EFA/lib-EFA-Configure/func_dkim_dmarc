# +---------------------------------------------------+
# Configure DKIM and DMARC
# +---------------------------------------------------+

function func_dkim-dmarc() {
func_echo-header


  echo -e ""
  echo -e "$green[eFa]$clean Welcome to the DKIM and DMARC wizard!"
  echo -e "$green[eFa]$clean The following questions will be used to enable/disable/modify a DKIM and DMARC deployment."
  echo -e ""

  if [[ -e /etc/opendmarc.conf ]]
    then
	  echo -e "$green[eFa]$clean DMARC and DKIM are currently $green ENABLED $clean on this appliance."
	  echo -e -n "$green[eFa]$clean Would you like to $red DISABLE $clean DMARC and DKIM functionality? [n/y/c]: "
	  read TMPOPT
	  
	  if [[ $TMPOPT == "y" || $TMPOPT == "Y" ]]
	    then
	      #Remove from Postifx
		  echo -e "Removing Postifx Mods"
		  service postfix stop
		  sed -i "/^smtpd_milters =/d" /etc/postfix/main.cf
		  sed -i "/^non_smtpd_milters =/d" /etc/postfix/main.cf
		  sed -i "/^milter_default_action =/d" /etc/postfix/main.cf
		  service postfix start

		  echo -e "Removing EFA-Config related items to DKIM/DMARC"
		  sed -i "/^DMARCREPEMAIL:/d" /etc/EFA-Config
		  sed -i "/^DMARCREPDOMAIN:/d" /etc/EFA-Config
		  sed -i "/^OPENDMARCSQLPWD:/d" /etc/EFA-Config

		  #Remove report task
		  rm -rf /etc/cron.daily/DMARCSendReports

		  #Remove TLD Suffix task
		  rm -rf /etc/cron.weekly/UpdateDMARCTLD
		
		  #Drop tables
		  
		  SQLPWD="`grep MYSQLROOTPWD /etc/EFA-Config | sed 's/^.*://'`"
		  /usr/bin/mysql -u root -p$SQLPWD -e "DROP DATABASE opendmarc;"
		  
		
		  #Remove DB User
		  /usr/bin/mysql -u root -p"$SQLPWD" -e "DROP USER IF EXISTS opendmarc;"
		  

		  #Remove Apps and saved files
		  service opendmarc stop
		  chkconfig opendmarc off
		  service opendkim stop
		  chkconfig opendkim off
		  yum remove -y opendkim opendmarc
		  rm -rf /etc/opendmarc.conf.rpmsave
		  rm -rf /etc/opendkim.conf.rpmsave
		  
		  pause
	  
	  
	    elif [[ $TMPOPT == "n" || $TMPOPT == "N" || $TMPOPT == "c" || $TMPOPT == "C" ]]; then
	      echo -e "No action taken"
		  pause
	    else
	      echo -e "$green[eFa]$clean Choice $green\"$TMPOPT\"$clean is not a valid choice."
          echo -e ""
          echo -e -n "$green[eFa]$clean Would you like to $red DISABLE $clean DMARC and DKIM functionality? [n/y/c]: "
          read TMPOPT
      fi
	  
	  
	  
	else
	  echo -e "$green[eFa]$clean DMARC and DKIM are currently $red DISABLED $clean on this appliance."
	  echo -e -n "$green[eFa]$clean Would you like to $green ENABLE $clean DMARC and DKIM functionality? [y/n/c]: "
	  read TMPOPT
	  
	  if [[ $TMPOPT == "y" || $TMPOPT == "Y" ]]
	    then
	      #Install OpenDMARC
		  echo -e "Installing required software now"
		  yum install -y policycoreutils-python opendmarc opendkim

		  #Get TLD Extensions
		  echo -e "Fetching TLD Name Suffix lists"
		  /usr/bin/wget --no-check-certificate -q -N -P /etc/opendmarc https://publicsuffix.org/list/effective_tld_names.dat
		  
		  #Create weekly task to get updated lists
		  ln -s /usr/local/sbin/EFA-Weekly-DMARC /etc/cron.weekly/UpdateDMARCTLD
		  
		  #Create daily task to send reports
		  ln -s /usr/local/sbin/EFA-Daily-DMARC /etc/cron.daily/DMARCSendReports

		  #Create OpenDMARC DB for reporting
		  echo -e "Creating OpenDMARC DB for reporting"
		  PASSWD=""
		  PASSWD=`tr -cd '[:alnum:]' < /dev/urandom | fold -w30 | head -n1`
		  echo "OPENDMARCSQLPWD:$PASSWD" >> /etc/EFA-Config
		  SQLPWD="`grep MYSQLROOTPWD /etc/EFA-Config | sed 's/^.*://'`"
     	  ODMARCSQLPWD="`grep OPENDMARCSQLPWD /etc/EFA-Config | sed 's/^.*://'`"
		  /usr/bin/mysql -u root -p"$SQLPWD" -e "CREATE DATABASE opendmarc;"
		  /usr/bin/mysql -u root -p"$SQLPWD" -e "GRANT ALL PRIVILEGES ON opendmarc.* TO opendmarc IDENTIFIED BY '$ODMARCSQLPWD';"
		  /usr/bin/mysql -u root -p"$SQLPWD" opendmarc < /usr/local/sbin/DMARC-Schema.sql
		  echo -e "DB created and creds saved in /etc/EFA-Config"

		  #Configure OpenDMARC
		  echo -e "Configuring OpenDMARC"
		  mkdir /var/opendmarc
		  chown opendmarc:opendmarc /var/opendmarc
		  sed -i "/^# AuthservID / c\AuthservID HOSTNAME" /etc/opendmarc.conf
		  sed -i "/^# PublicSuffixList / c\PublicSuffixList \/etc\/opendmarc\/effective_tld_names.dat" /etc/opendmarc.conf
		  sed -i "/^# HistoryFile / c\HistoryFile \/var\/opendmarc\/dmarc_msg_history.dat" /etc/opendmarc.conf
		  echo -e "OpenDMARC is configured"

		  #Configure OpenDKIM
		  echo -e "Configuring OpenDKIM"
		  sed -i "/^KeyFile/ c\#KeyFile \/etc\/opendkim\/keys\/default\.private" /etc/opendkim.conf
		  sed -i "/^# KeyTable/ c\KeyTable \/etc\/opendkim\/KeyTable" /etc/opendkim.conf
		  echo -e "OpenDKIM is configured for verification only, not signing!!"

		  #configure postfix for OpenDMARC and OpenDKIM
		  echo -e "configuring Postfix for OpenDKIM and OpenDMARC"
		  postconf -e "smtpd_milters = inet:localhost:8891, inet:localhost:8893"
		  postconf -e "non_smtpd_milters = "
		  postconf -e "milter_default_action = accept"
		  sed -i '/^non_smtpd_milters =/ c\non_smtpd_milters = $smtpd_milters' /etc/postfix/main.cf
		  echo -e "Postfix is configured for OpenDKIM and OpenDMARC"

		  #Get report domain
		  echo -e "$green[eFa]$clean Please enter the Reporter Domain (org) to be used when sending DMARC reports"
		  read DMARCRepDomain
			while [ $dncheck != 0 ]
			do
				if [[ $DMARCRepDomain =~ ^[a-zA-Z0-9]+([\-\.]{1}[a-zA-Z0-9-]+)*\.[a-z]{2,6}$ ]]
			then
				dncheck=0
			else
				echo -e "$red ERROR: The domain $DMARCRepDomain seems to be invalid"
				echo -e "ERROR: please re-enter the domain$clean"
				echo -e "$green[eFa]$clean Please enter the domain name for this machine"
				echo -e -n "$green[eFa]$clean : "
				read DMARCRepDomain
			fi
			done
		  
		  
		  echo -e "$green[eFa]$clean $DMARCRepDomain will be the organization used to to send reports."
		  echo "DMARCREPDOMAIN:$DMARCRepDomain" >> /etc/EFA-Config

		  #Get dmarc-report-email
		  echo -e "$green[eFa]$clean Please enter the Reporter Email to be used when sending DMARC reports"
		  read DMARCRepEmail
		  dmarcemailcheck=1
          while [ $dmarcemailcheck != 0 ]
            do
              if [[ $DMARCRepEmail =~ ^[-_.@Aa-zA-Z0-9]{2,256}+[a-zA-Z0-9]+([\-\.]{1}[a-zA-Z0-9]+)*\.[a-z]{2,6}$ ]]
            then
              dmarcemailcheck=0
            else
              echo -e "       $red ERROR: The address $DMARCRepEmail seems to be invalid"
              echo -e "        ERROR: please re-enter the DMARC Reporter Email Address$clean"
              echo -e "$green[eFa]$clean Please enter the Reporter Email to be used when sending DMARC reports"
              echo -e -n "$green[eFa]$clean : "
              read DMARCRepEmail
           fi
		   done
		  echo -e "$green[eFa]$clean $DMARCRepEmail will be the address used to to send reports."
		  echo "DMARCREPEMAIL:$DMARCRepEmail" >> /etc/EFA-Config

		  echo -e "Starting services..."
		  service opendmarc start
		  chkconfig opendmarc on
		  service opendkim start
		  chkconfig opendkim on
		  service postfix stop
		  service postfix start
		  echo -e "System is ready to use OpenDKIM and OpenDMARC"
		  echo -e "Please see the eFa wiki for more advanced configuration options."
		  pause

	  elif [[ $TMPOPT == "n" || $TMPOPT == "N" || $TMPOPT == "c" || $TMPOPT == "C" ]]; then
	    echo -e "No action taken"
		pause
		
	  else
	    echo -e "$green[eFa]$clean Choice $green\"$TMPOPT\"$clean is not a valid choice."
        echo -e ""
        echo -e -n "$green[eFa]$clean Would you like to $green ENABLE $clean DMARC and DKIM functionality? [n/y/c]"
        read TMPOPT
      fi
	  
fi
}