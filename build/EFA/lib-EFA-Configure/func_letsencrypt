# +---------------------------------------------------+
# Configure Lets Encrypt
# +---------------------------------------------------+
function func_lets-encrypt() {
  func_echo-header

  local MyHost
  local MyDomain
  local MyName
  MyHost="`grep HOSTNAME /etc/EFA-Config | sed 's/^.*://'`"
  MyDomain="`grep DOMAINNAME /etc/EFA-Config | sed 's/^.*://'`"
  MyName=$MyHost.$MyDomain



  echo -e ""
  echo -e "This is the current FQDN that will be used for the new cert"
  echo -e ""
  echo -e "$MyName"
  echo -e ""
  echo -e "If this is not correct, please update your Hostname and Domain Name within main menu #4."
  echo -e ""
  echo -e "Please also make sure the name above is externally resolvabe before continuing."
  echo -e "Please also make sure that TCP 443 is opened from WAN to EFA."
  echo -e "$green[EFA]$clean Do you want to continue with enabling Let's Encrypt? [y/n/c]"
  echo -e ""
  echo -e ""
  local TMPLE
  read TMPLE


  flag=0
  while [ $flag == "0" ]
    do
      if [[ $TMPLE == "y" || $TMPLE == "Y" ]]; then
        #change SSL.CONF to hostname
        sed -i "/^#ServerName/ c\ServerName $MyName:443" /etc/httpd/conf.d/ssl.conf
        #call the certbot
        /opt/certbot/certbot-auto --domains $MyName --non-interactive --no-redirect --apache --agree-tos -m ttodd@ttodd.com
        service httpd restart
        #update webmin cert (add logic to detect if cert there b4)
        echo -e ""
        echo -e "Applying new cert to webmin!"        
        if [ -e /etc/webmin/miniserv.pem.orig ]
        then
          echo -e "Cert previoulsy existed for webmin"
          echo -e "Would you like to force replace exisiting webmin cert?"
          echo -e "Anything except y/Y/(enter) will result in skipping this step."
          local TMPFORCEWEBMIN
          read TMPFORCEWEBMIN
            if [[ $TMPFORCEWEBMIN == "y" || $TMPFORCEWEBMIN == "Y" || -z $TMPFORCEWEBMIN ]]; then
              rm -f /etc/webmin/miniserv.pem
              cat /etc/letsencrypt/live/$MyName/privkey.pem /etc/letsencrypt/live/$MyName/cert.pem > /etc/webmin/miniserv.pem
            else
              echo -e "Will not force a reinstall of cert for webmin."
            fi
        else
          mv /etc/webmin/miniserv.pem /etc/webmin/miniserv.pem.orig
          cat /etc/letsencrypt/live/$MyName/privkey.pem /etc/letsencrypt/live/$MyName/cert.pem > /etc/webmin/miniserv.pem
          echo 'extracas=/etc/letsencrypt/live/$MyName/chain.pem' >> /etc/webmin/miniserv.conf
          echo -e "I've updated the Webmin cert"
        fi
        
        #add a cron job to renew cert
        ln -s /scripts/renew-certs.sh /etc/cron.monthly/RenewLetsEncrypt
        echo -e ""
        echo -e "Let's Encrypt has been enabled"
        echo -e ""
        pause
        flag=1


      elif [[ $TMPLE == "n" || $TMPLE == "N" ]]; then
        #flip back ssl.conf
        sed -i "/^ServerName/ c\#ServerName www.example.com:443" /etc/httpd/conf.d/ssl.conf

        #remove cron job
        rm -f /etc/cron.monthly/RenewLetsEncrypt
        
        #restore self signed certs (webmin)
        if [ -e /etc/webmin/miniserv.pem.orig ]
        then
          rm -f /etc/webmin/miniserv.pem
          mv /etc/webmin/miniserv.pem.orig /etc/webmin/miniserv.pem
          sed "/extracas=/d" /etc/webmin/miniserv.conf
          echo -e "I've restored the orirignal self-signed cert to Webmin."
        else
          echo -e "Webmin was previously cleaned up."
        fi
        
        #restore self signed certs apache
        service httpd stop
        sed -i "/^SSLCertificateFile/ c\SSLCertificateFile \/etc\/pki\/tls\/certs\/localhost.crt" /etc/httpd/conf.d/ssl.conf
        sed -i "/^SSLCertificateKeyFile/ c\SSLCertificateKeyFile \/etc\/pki\/tls\/private\/localhost.key" /etc/httpd/conf.d/ssl.conf
        service httpd start

        #remove LE files
        echo -e ""
        echo -e "Let's Encrypt has been disabled"
        echo -e ""
        sleep 5
        flag=1

      elif [[ $TMPLE == "c" || $TMPLE == "C" ]]; then
        echo -e "No action taken. Exiting."
        sleep 5
        flag=1

      else
        echo -e "Choice $green\"$TMPLE\"$clean is not a valid choice."
        echo -e ""
        echo -e -n "$green[EFA]$clean Enable Let's Encrypt? (y/n/c): "
        read TMPMODSECURITY
      fi
    done
}

# +----------------------------------------------
